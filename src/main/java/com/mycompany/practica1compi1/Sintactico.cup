package com.mycompany.practica1compi1;
import java_cup.runtime.*;

parser code 
{:

    private double resultado;
    private String datos;
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    public void syntax_error(Symbol s){ 
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
    } 
    /**
     * Método al que se llama cuando se identifica un error sintáctico en el que 
     * ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + " no reconocido."); 
    } 

    public Double getResultado() {
        return resultado;
    }
    public String getPosfijo() {
        return datos;
    }
:} 


terminal String PARIZQ,PARDER;
terminal String MENOS,MAS,POR,DIV,COMA,AZUL,ROJO,AMARILLO,VERDE,NEGRO,MORADO,CAFE,ROSA,CELESTE,LINEA,CURVA;
terminal String GRAFICAR, CIRCULO, CUADRADO, RECTANGULO, POLIGONO, ANIMAR, OBJETO, ANTERIOR;
terminal String ENTERO;
terminal String ID;


non terminal ini;
non terminal instrucciones;
non terminal instruccion;
non terminal  expresion;
non terminal  graficar;
non terminal  animar;
non terminal  color;
non terminal  tipo;
non terminal forma;

precedence left MAS, MENOS;
precedence left POR, DIV; 
precedence left PARIZQ, PARDER;

start with ini; 

ini::=instrucciones;

instrucciones ::= 
   instruccion
 | error instrucciones
; 

instruccion ::= graficar | animar;

graficar ::= GRAFICAR forma;

forma ::= CIRCULO PARIZQ ID COMA expresion COMA expresion COMA expresion COMA color PARDER
 |CUADRADO PARIZQ ID COMA expresion COMA expresion COMA expresion COMA color PARDER
 |RECTANGULO PARIZQ ID COMA expresion COMA expresion COMA expresion COMA expresion COMA color PARDER
 |LINEA PARIZQ ID COMA expresion COMA expresion COMA expresion COMA expresion COMA color PARDER
 |POLIGONO PARIZQ ID COMA expresion COMA expresion COMA expresion COMA expresion COMA expresion COMA color PARDER
;

expresion  ::=     
    expresion:a MAS        expresion:b     {: RESULT= (Integer.valueOf((String)a) + Integer.valueOf((String)b) );:}
 |  expresion:a POR        expresion:b     {: RESULT=(Integer.valueOf((String)a)*Integer.valueOf((String)b) );:}
 |  expresion:a MENOS        expresion:b     {: RESULT=(Integer.valueOf((String)a) - Integer.valueOf((String)b) );:}
 |  expresion:a DIV        expresion:b     {: RESULT=(Integer.valueOf((String)a)/Integer.valueOf((String)b) );:}
 |  ENTERO:a                               {:RESULT=Integer.valueOf((String)a);:}
 |  PARIZQ expresion:a PARDER              {:RESULT=a;:}
;	

color ::= AZUL|ROJO|AMARILLO|VERDE|NEGRO|MORADO|CAFE|ROSA|CELESTE;

animar ::= ANIMAR OBJETO ANTERIOR PARIZQ tipo COMA expresion COMA expresion COMA expresion PARDER;

tipo ::= CURVA | LINEA; 




